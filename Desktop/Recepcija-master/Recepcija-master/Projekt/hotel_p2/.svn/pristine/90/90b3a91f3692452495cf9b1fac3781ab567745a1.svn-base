
package service;

import java.math.BigDecimal;
import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "RecepcijaWS", targetNamespace = "http://service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface RecepcijaWS {


    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "vrniNapako", targetNamespace = "http://service/", className = "service.VrniNapako")
    @ResponseWrapper(localName = "vrniNapakoResponse", targetNamespace = "http://service/", className = "service.VrniNapakoResponse")
    public String vrniNapako();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "preveriRazpolozljivostSobe", targetNamespace = "http://service/", className = "service.PreveriRazpolozljivostSobe")
    @ResponseWrapper(localName = "preveriRazpolozljivostSobeResponse", targetNamespace = "http://service/", className = "service.PreveriRazpolozljivostSobeResponse")
    public String preveriRazpolozljivostSobe(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sporociSteviloProstihSob", targetNamespace = "http://service/", className = "service.SporociSteviloProstihSob")
    @ResponseWrapper(localName = "sporociSteviloProstihSobResponse", targetNamespace = "http://service/", className = "service.SporociSteviloProstihSobResponse")
    public int sporociSteviloProstihSob();

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "dodeliSobo", targetNamespace = "http://service/", className = "service.DodeliSobo")
    @ResponseWrapper(localName = "dodeliSoboResponse", targetNamespace = "http://service/", className = "service.DodeliSoboResponse")
    public String dodeliSobo(
        @WebParam(name = "arg0", targetNamespace = "")
        List<Oseba> arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "preveriPaket", targetNamespace = "http://service/", className = "service.PreveriPaket")
    @ResponseWrapper(localName = "preveriPaketResponse", targetNamespace = "http://service/", className = "service.PreveriPaketResponse")
    public String preveriPaket(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "aliJeGost", targetNamespace = "http://service/", className = "service.AliJeGost")
    @ResponseWrapper(localName = "aliJeGostResponse", targetNamespace = "http://service/", className = "service.AliJeGostResponse")
    public boolean aliJeGost(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "SporociOpravljenoNarocilo")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "SporociOpravljenoNarocilo", targetNamespace = "http://service/", className = "service.SporociOpravljenoNarocilo")
    @ResponseWrapper(localName = "SporociOpravljenoNarociloResponse", targetNamespace = "http://service/", className = "service.SporociOpravljenoNarociloResponse")
    public String sporociOpravljenoNarocilo(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "odjaviSobo", targetNamespace = "http://service/", className = "service.OdjaviSobo")
    @ResponseWrapper(localName = "odjaviSoboResponse", targetNamespace = "http://service/", className = "service.OdjaviSoboResponse")
    public String odjaviSobo(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "dodajNaRacun", targetNamespace = "http://service/", className = "service.DodajNaRacun")
    @ResponseWrapper(localName = "dodajNaRacunResponse", targetNamespace = "http://service/", className = "service.DodajNaRacunResponse")
    public String dodajNaRacun(
        @WebParam(name = "arg0", targetNamespace = "")
        BigDecimal arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4);

    /**
     * 
     * @return
     *     returns java.util.List<service.Soba>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "vrniVseSobe", targetNamespace = "http://service/", className = "service.VrniVseSobe")
    @ResponseWrapper(localName = "vrniVseSobeResponse", targetNamespace = "http://service/", className = "service.VrniVseSobeResponse")
    public List<Soba> vrniVseSobe();

    /**
     * 
     * @return
     *     returns java.util.List<service.Gost>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "vrniVseGoste", targetNamespace = "http://service/", className = "service.VrniVseGoste")
    @ResponseWrapper(localName = "vrniVseGosteResponse", targetNamespace = "http://service/", className = "service.VrniVseGosteResponse")
    public List<Gost> vrniVseGoste();

}
